<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lmax on </title>
    <link>https://lfn3.net/tags/lmax/</link>
    <description>Recent content in Lmax on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 06 Feb 2019 21:22:46 +0000</lastBuildDate>
    
	<atom:link href="https://lfn3.net/tags/lmax/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reducible Systems</title>
      <link>https://lfn3.net/2019/02/06/reducible-systems/</link>
      <pubDate>Wed, 06 Feb 2019 21:22:46 +0000</pubDate>
      
      <guid>https://lfn3.net/2019/02/06/reducible-systems/</guid>
      <description>&lt;p&gt;A while ago I had a minor revelation about why I&amp;rsquo;m ok with working in the
&lt;a href=&#34;https://www.lmax.com&#34;&gt;LMAX&lt;/a&gt;
codebase. I&amp;rsquo;ve got a pretty strong interest in functional programming by way of
Clojure, so you&amp;rsquo;d think working in a system where pervasive mutation is the rule
rather than the exception would slowly drive me nuts.&lt;/p&gt;

&lt;p&gt;I think there&amp;rsquo;s a few reasons I&amp;rsquo;ve retained my sanity, but the most important
one is the way the system is designed it&amp;rsquo;s easy to keep a mental model of, and
that model isn&amp;rsquo;t often broken. Why is that the case, though?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Where the GC Fears to Tread</title>
      <link>https://lfn3.net/2018/09/22/where-the-gc-fears-to-tread/</link>
      <pubDate>Sat, 22 Sep 2018 12:30:00 +0100</pubDate>
      
      <guid>https://lfn3.net/2018/09/22/where-the-gc-fears-to-tread/</guid>
      <description>&lt;p&gt;A while ago at &lt;a href=&#34;https://lmax.com&#34;&gt;LMAX Exchange&lt;/a&gt; our staging environment was having services killed frequently by the OOM killer.
This wasn&amp;rsquo;t &lt;em&gt;that&lt;/em&gt; unusual, since our staging vms are relatively under-provisioned compared to our production environments&lt;/p&gt;

&lt;p&gt;(We have separate performance testing environments, with much beefier hardware for making sure we go fast, whereas the staging environments
exist more for testing our deployment and configuration.)&lt;/p&gt;

&lt;p&gt;But it was irritating, since it led to a reasonable amount of toil on the part of both the dev and systems teams.
We eventually ended up figuring it out, but it was a bit of a journey.
All of the dev team was interested in it, so we begged, bothered and cajoled the whole story out of &lt;a href=&#34;https://github.com/Palmr&#34;&gt;Nick&lt;/a&gt;,
who did most of the digging. I thought it was good enough to share with the world at large,
so I&amp;rsquo;ve reproduced his presentation in blog form here.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bitcoin crash course</title>
      <link>https://lfn3.net/2018/08/01/bitcoin-crash-course/</link>
      <pubDate>Wed, 01 Aug 2018 10:40:00 +0100</pubDate>
      
      <guid>https://lfn3.net/2018/08/01/bitcoin-crash-course/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve just moved to London, and been working on &lt;a href=&#34;https://www.lmaxdigital.com/&#34;&gt;LMAX Digital&lt;/a&gt; and as a result been given
a bit of a crash course on how exactly Bitcoin (and other cryptocurrency) transactions actually work. I think there&amp;rsquo;s a
near zero chance I&amp;rsquo;m going to remember it as I&amp;rsquo;ve moved on to another area of work, so I figured I&amp;rsquo;d better write it
all down before I forget it all.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>