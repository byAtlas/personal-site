<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://lfn3.net/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 22 Sep 2018 12:30:00 +0100</lastBuildDate>
    
	<atom:link href="https://lfn3.net/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Where the GC Fears to Tread</title>
      <link>https://lfn3.net/2018/09/22/where-the-gc-fears-to-tread/</link>
      <pubDate>Sat, 22 Sep 2018 12:30:00 +0100</pubDate>
      
      <guid>https://lfn3.net/2018/09/22/where-the-gc-fears-to-tread/</guid>
      <description>&lt;p&gt;A while ago at &lt;a href=&#34;https://lmax.com&#34;&gt;LMAX Exchange&lt;/a&gt; our staging environment was having services killed frequently by the OOM killer.
This wasn&amp;rsquo;t &lt;em&gt;that&lt;/em&gt; unusual, since our staging vms are relatively under-provisioned compared to our production environments&lt;/p&gt;

&lt;p&gt;(We have separate performance testing environments, with much beefier hardware for making sure we go fast, whereas the staging environments
exist more for testing our deployment and configuration.)&lt;/p&gt;

&lt;p&gt;But it was irritating, since it led to a reasonable amount of toil on the part of both the dev and systems teams.
We eventually ended up figuring it out, but it was a bit of a journey.
All of the dev team was interested in it, so we begged, bothered and cajoled the whole story out of &lt;a href=&#34;https://github.com/Palmr&#34;&gt;Nick&lt;/a&gt;,
who did most of the digging. I thought it was good enough to share with the world at large,
so I&amp;rsquo;ve reproduced his presentation in blog form here.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bitcoin crash course</title>
      <link>https://lfn3.net/2018/08/01/bitcoin-crash-course/</link>
      <pubDate>Wed, 01 Aug 2018 10:40:00 +0100</pubDate>
      
      <guid>https://lfn3.net/2018/08/01/bitcoin-crash-course/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve just moved to London, and been working on &lt;a href=&#34;https://www.lmaxdigital.com/&#34;&gt;LMAX Digital&lt;/a&gt; and as a result been given
a bit of a crash course on how exactly Bitcoin (and other cryptocurrency) transactions actually work. I think there&amp;rsquo;s a
near zero chance I&amp;rsquo;m going to remember it as I&amp;rsquo;ve moved on to another area of work, so I figured I&amp;rsquo;d better write it
all down before I forget it all.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Roasters log 1</title>
      <link>https://lfn3.net/2018/02/06/roasters-log-1/</link>
      <pubDate>Tue, 06 Feb 2018 17:40:00 +1300</pubDate>
      
      <guid>https://lfn3.net/2018/02/06/roasters-log-1/</guid>
      <description>&lt;p&gt;So I&amp;rsquo;m up to roast number 7 at this point (probably 8 or 9 by the time I&amp;rsquo;ve finished this blog post&amp;hellip;).
I&amp;rsquo;m beginning to think maybe I like the process of roasting coffee more than drinking it - my biggest issue at this
point is that I can&amp;rsquo;t iterate quickly enough on the roasts because I don&amp;rsquo;t drink coffee quickly enough.
I only want to roast enough coffee for about a 5 days worth of drinking, i.e. ~5 batches in my wee popcorn machine,
since apparently the &amp;ldquo;freshness&amp;rdquo; really starts to fall off after 5 or so days. I&amp;rsquo;m tempted to try and foist it on my
friends, but I think I need to try and dial it in a bit first.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Roasting coffee with a popcorn maker</title>
      <link>https://lfn3.net/2018/02/05/roasting-coffee-with-a-popcorn-maker/</link>
      <pubDate>Mon, 05 Feb 2018 15:16:00 +1300</pubDate>
      
      <guid>https://lfn3.net/2018/02/05/roasting-coffee-with-a-popcorn-maker/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a big coffee fan. I&amp;rsquo;m also a massive cheapskate. Normally the first one wins, but the other day I found
&lt;a href=&#34;https://hackaday.com/2018/01/23/build-an-excellent-coffee-roaster-with-a-satisfyingly-low-price-tag/&#34;&gt;this post&lt;/a&gt;
about how you can roast your own coffee. Within about an hour I&amp;rsquo;d ordered the necessary bits, and now less than a week
later, I&amp;rsquo;ve roasted my 5th artisanal microbatch of coffee.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lfn3.net/img/posts/roasting-coffee-with-a-popcorn-maker/greasy-beans.jpg&#34; alt=&#34;roasted coffee&#34; /&gt;&lt;/p&gt;

&lt;p&gt;As you might be able to tell, I haven&amp;rsquo;t dialed in the actual roasting part of it just yet, but I can definitely tell
you how to pull apart a popcorn maker.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The unreasonable effectiveness of checklists</title>
      <link>https://lfn3.net/2018/01/09/the-unreasonable-effectiveness-of-checklists/</link>
      <pubDate>Tue, 09 Jan 2018 08:23:00 +1300</pubDate>
      
      <guid>https://lfn3.net/2018/01/09/the-unreasonable-effectiveness-of-checklists/</guid>
      <description>&lt;p&gt;One of the things we did recently was start using a checklist once we think we&amp;rsquo;ve &amp;lsquo;completed&amp;rsquo; a story.
The checklist is basically just a big list of features that already exist in our codebase, and some notable gotchas
that have caught us out before. All we do is go through it and ask ourselves if what we&amp;rsquo;ve just written interacts with
that feature or gotcha, and if so, have we written a test for it?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why bother with property tests</title>
      <link>https://lfn3.net/2018/01/08/why-bother-with-property-tests/</link>
      <pubDate>Mon, 08 Jan 2018 09:00:00 +1300</pubDate>
      
      <guid>https://lfn3.net/2018/01/08/why-bother-with-property-tests/</guid>
      <description>&lt;p&gt;So something I&amp;rsquo;ve been trying to do lately is write more property or generative tests. I&amp;rsquo;ve been spending a bit of time
thinking about why we&amp;rsquo;re actually doing this. Obviously I think it&amp;rsquo;s a good idea, but what actual benefits do we get
from these, apart from slightly more arcane tests?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flamegraphs and benchmarks</title>
      <link>https://lfn3.net/2017/12/14/flamegraphs-and-benchmarks/</link>
      <pubDate>Thu, 14 Dec 2017 08:08:12 +1300</pubDate>
      
      <guid>https://lfn3.net/2017/12/14/flamegraphs-and-benchmarks/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jgpc42/lein-jmh&#34;&gt;lein jmh&lt;/a&gt; recently turned up on the Clojure
scene. I&amp;rsquo;ve been using it to debug some performance issues with a library I&amp;rsquo;m
about to open source called undertaker. I&amp;rsquo;m gonna tell you a little bit about
the why and the how of getting benchmarks to produce
&lt;a href=&#34;http://www.brendangregg.com/flamegraphs.html&#34;&gt;Flamegraphs&lt;/a&gt; like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lfn3.net/img/posts/flamegraphs-and-benchmarks/flamegraph.png&#34; alt=&#34;flamegraph&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Clojure fspec surprise</title>
      <link>https://lfn3.net/2017/07/22/clojure-fspec-surprise/</link>
      <pubDate>Sat, 22 Jul 2017 23:03:00 +1300</pubDate>
      
      <guid>https://lfn3.net/2017/07/22/clojure-fspec-surprise/</guid>
      <description>&lt;p&gt;Recently when writing Clojure I&amp;rsquo;ve been trying to cover everything I can in specs.
This led me to a bit of a surprise when I used
&lt;a href=&#34;https://clojure.org/guides/spec#_higher_order_functions&#34;&gt;&lt;code&gt;fspec&lt;/code&gt;&lt;/a&gt;.
It evaluates the fspec&amp;rsquo;d function when it&amp;rsquo;s passed to a fdef&amp;rsquo;d function,
not when you invoke the function. That&amp;rsquo;s probably super unclear, so look below
the fold for an example.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Writing IntelliJ plugins</title>
      <link>https://lfn3.net/2017/05/27/writing-intellij-plugins/</link>
      <pubDate>Sat, 27 May 2017 10:21:00 +1200</pubDate>
      
      <guid>https://lfn3.net/2017/05/27/writing-intellij-plugins/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve spent some time working on an IntelliJ plugin during our free time at work.
There&amp;rsquo;s quite a bit of stuff I&amp;rsquo;ve learned from either reading source or messing
with things until they worked, and I thought I&amp;rsquo;d record some of that.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll need some knowledge of how IntelliJ plugins work, mostly about the Psi
model and it&amp;rsquo;s API. If you want to learn about that, you should probably start
with &lt;a href=&#34;http://www.jetbrains.org/intellij/sdk/docs/basics/architectural_overview/psi_files.html&#34;&gt;this&lt;/a&gt;
or &lt;a href=&#34;http://www.jetbrains.org/intellij/sdk/docs/basics/architectural_overview/psi_elements.html&#34;&gt;this&lt;/a&gt;.
Anyway, tip #1 - PsiTrees are sensitive about what elements you put where.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Property testing tooling in Java</title>
      <link>https://lfn3.net/2017/05/07/property-testing-tooling-in-java/</link>
      <pubDate>Sun, 07 May 2017 11:43:00 +1200</pubDate>
      
      <guid>https://lfn3.net/2017/05/07/property-testing-tooling-in-java/</guid>
      <description>&lt;p&gt;The NZ contingent of LMAX went to &lt;a href=&#34;http://codemania.io/&#34;&gt;Codemania&lt;/a&gt; at the end
of last week. And it was awesome, I always come out of there excited to make
things. Then usually I give myself a hangover which puts an end to that.
Anyway, the two themes we picked out from the conference were automate more,
and property test all the things.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m already a huge fan of &lt;a href=&#34;https://github.com/clojure/test.check&#34;&gt;test.check&lt;/a&gt;
for my Clojure code, and have been feeling some friction working with the
tooling we had for property testing in Java. So I spent some time digging into
the options we had, and this post is the result of that.&lt;/p&gt;

&lt;p&gt;This post assumes you have some knowledge of what property based testing is,
and how it works. I&amp;rsquo;m just going to compare and contrast Java libraries that
enable it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Performance checks on metrics</title>
      <link>https://lfn3.net/2017/04/24/performance-checks-on-metrics/</link>
      <pubDate>Mon, 24 Apr 2017 21:31:22 +1200</pubDate>
      
      <guid>https://lfn3.net/2017/04/24/performance-checks-on-metrics/</guid>
      <description>&lt;p&gt;At &lt;a href=&#34;https://www.lmax.com/&#34;&gt;LMAX&lt;/a&gt; we do &lt;a href=&#34;https://www.symphonious.net/testing-at-lmax/&#34;&gt;a lot of automated testing&lt;/a&gt;, including running several
dedicated environments for performance testing. We&amp;rsquo;ve got a lot of specific
numbers that come out of these environments that we surface on dashboards like
this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lfn3.net/img/posts/performance-checks-on-metrics/perf-dashboard.png&#34; alt=&#34;perf-dashboard&#34; /&gt;&lt;/p&gt;

&lt;p&gt;But we also collect a bunch of other metrics from our servers and services that,
until recently, we didn&amp;rsquo;t have much visibility over.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Coupling, Connascence, CSP and Actors</title>
      <link>https://lfn3.net/2016/10/03/coupling-connascence-csp-and-actors/</link>
      <pubDate>Mon, 03 Oct 2016 23:10:00 +1300</pubDate>
      
      <guid>https://lfn3.net/2016/10/03/coupling-connascence-csp-and-actors/</guid>
      <description>&lt;p&gt;In the last 6 months, I&amp;rsquo;ve been lucky enough to be exposed to two very different ways of dealing with asynchrony in one of our production systems at &lt;a href=&#34;http://www.liveopscloud.com/&#34;&gt;LiveOps Cloud&lt;/a&gt;. We converted one of our core backend services from Clojure&amp;rsquo;s &lt;a href=&#34;https://github.com/clojure/core.async&#34;&gt;core.async&lt;/a&gt; to &lt;a href=&#34;http://docs.paralleluniverse.co/pulsar/&#34;&gt;Pulsar&lt;/a&gt;. Having been a part of that transformation, I now, of course, have &lt;em&gt;opinions&lt;/em&gt; that I&amp;rsquo;m going to subject you to. Those opinions boil down to CSP (&lt;a href=&#34;https://en.wikipedia.org/wiki/Communicating_sequential_processes&#34;&gt;Communicating Sequential Processes&lt;/a&gt;) as implemented in core.async is better than the actor model, at least as implemented in Pulsar.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dependency Injection in Clojure</title>
      <link>https://lfn3.net/2016/09/19/dependency-injection-in-clojure/</link>
      <pubDate>Mon, 19 Sep 2016 21:57:44 +1200</pubDate>
      
      <guid>https://lfn3.net/2016/09/19/dependency-injection-in-clojure/</guid>
      <description>&lt;p&gt;So this is the follow up to a follow up. I&amp;rsquo;ve been writing Clojure more or less professionally for about a year now, and I just re-read &lt;a href=&#34;https://lfn3.net/2015/02/15/fresh-thoughts-on-dependency-injection/&#34;&gt;my old thoughts on Dependency Injection&lt;/a&gt;. Once again, it having been more than 6 months, my opinions have changed.
The reasons I used dependency injection in C# don&amp;rsquo;t affect me nearly as badly in Clojure, so the amount I use it has vastly decreased, and the way and reasons I use it have changed.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leaving the M$alt Mines</title>
      <link>https://lfn3.net/2015/10/08/leaving-the-malt-mines/</link>
      <pubDate>Thu, 08 Oct 2015 22:38:13 +1300</pubDate>
      
      <guid>https://lfn3.net/2015/10/08/leaving-the-malt-mines/</guid>
      <description>So a little while ago (ok, a couple of months ago now.) I quit my job at Ubquity in favour of one at LiveOps. There were a bunch of reasons for that, but you&amp;rsquo;ll have to buy me a beer to get those out of me. The main draw though, was being able to work with Clojure instead of C# (Hence the punny title).
There&amp;rsquo;s a lot of posts about why and how companies moved to Clojure but not so many about individuals - I guess we don&amp;rsquo;t really make good marketing pieces?</description>
    </item>
    
    <item>
      <title>Error Handling in ASP.NET MVC</title>
      <link>https://lfn3.net/2015/03/08/error-handling-in-asp.net-mvc/</link>
      <pubDate>Sun, 08 Mar 2015 23:06:00 +1300</pubDate>
      
      <guid>https://lfn3.net/2015/03/08/error-handling-in-asp.net-mvc/</guid>
      <description>&lt;p&gt;So today we&amp;rsquo;re gonna talk about how to make sure you don&amp;rsquo;t show your users something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lfn3.net/img/posts/error-handling-in-asp-net-mvc/ysod.png&#34; alt=&#34;The yellow screen of death&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fresh Thoughts on Dependency Injection</title>
      <link>https://lfn3.net/2015/02/15/fresh-thoughts-on-dependency-injection/</link>
      <pubDate>Sun, 15 Feb 2015 12:10:22 +1300</pubDate>
      
      <guid>https://lfn3.net/2015/02/15/fresh-thoughts-on-dependency-injection/</guid>
      <description>&lt;p&gt;This is essentially a follow up to an earlier post &lt;a href=&#34;https://lfn3.net/2014/09/18/dependency-injection-a-necessary-evil/&#34;&gt;Dependency Injection - A necessary evil?&lt;/a&gt;,  from back when I had more reservations about using DI, and the benefits it gave me. I&amp;rsquo;ve since been fully converted to a &amp;lsquo;believer&amp;rsquo;. This post is bascially about why and how I think that happened.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Moving to Hugo and Lanyon</title>
      <link>https://lfn3.net/2015/02/14/moving-to-hugo-and-lanyon/</link>
      <pubDate>Sat, 14 Feb 2015 18:52:49 +1300</pubDate>
      
      <guid>https://lfn3.net/2015/02/14/moving-to-hugo-and-lanyon/</guid>
      <description>&lt;p&gt;So if you&amp;rsquo;ve been here before (highly unlikely, I know), you might have noticed this place might have previously looked almost entirely different. There&amp;rsquo;s reasons for that. I got somewhat frustrated with my existing cobbled together solution of python scripts, so I had a bit of a look around and found this nice new-ish project (in Go, which is an important factor for me, I like to be able to stare into the guts of the things I use.) called &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. It seems to support pretty much everything I want it to, which is super. And it&amp;rsquo;s also relatively simple in terms of what it expects from the user, which is also great.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dependency Injection - A necessary evil?</title>
      <link>https://lfn3.net/2014/09/18/dependency-injection---a-necessary-evil/</link>
      <pubDate>Thu, 18 Sep 2014 07:27:25 +1200</pubDate>
      
      <guid>https://lfn3.net/2014/09/18/dependency-injection---a-necessary-evil/</guid>
      <description>&lt;p&gt;&lt;em&gt;Basically my position on DI has since changed - go take a look at &lt;a href=&#34;https://lfn3.net/2015/02/14/fresh-thoughts-on-dependency-injection/&#34;&gt;Fresh Thoughts on Dependency Injection&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So first of all, to preface this and so you get a little bit of insight from where I&amp;rsquo;m coming from, I spend most of my days toiling in the great C# mine, so lovingly provided by Microsoft. I used to be a python guy, and I&amp;rsquo;ve gotten dangerous with Go, and am trying to do so with Clojure. The clojure thing is recent, so this might be a bit more cargo culty than I&amp;rsquo;d like. Anyway.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fun with Icon Fonts</title>
      <link>https://lfn3.net/2013/03/12/fun-with-icon-fonts/</link>
      <pubDate>Tue, 12 Mar 2013 18:32:40 +1200</pubDate>
      
      <guid>https://lfn3.net/2013/03/12/fun-with-icon-fonts/</guid>
      <description>&lt;p&gt;So I spent a good chunk of today messing around with making a few icons for use on this site. Which was&amp;hellip; interesting. There isn&amp;rsquo;t really a heck of a lot of information out there about how to do this, or at least nothing that google turned up. I managed to cobble something together though. And now hopefully reading this will save you all that effort.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Making of</title>
      <link>https://lfn3.net/2013/03/11/the-making-of/</link>
      <pubDate>Mon, 11 Mar 2013 18:32:40 +1200</pubDate>
      
      <guid>https://lfn3.net/2013/03/11/the-making-of/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is hideously out of date. Go take a look at &lt;a href=&#34;https://lfn3.net/2015/02/14/moving-to-hugo-and-lanyon/&#34;&gt;Moving to Hugo and Lanyon&lt;/a&gt; for the lowdown on way this site works now&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So. I&amp;rsquo;d written two posts in anticipation of getting this up and running, however they proved to be glouriously incorrect. I&amp;rsquo;ve been through about three or four changes in terms of how I actually decided to do this, so&amp;hellip; yeah.&lt;/p&gt;

&lt;p&gt;Anyway, at this point, it&amp;rsquo;s a site that&amp;rsquo;s built from &lt;a href=&#34;http://jinja.pocoo.org/&#34;&gt;Jinja2&lt;/a&gt; templates. Mostly. In case you haven&amp;rsquo;t noticed, some bits of it are still not yet entirely working. Mostly the contact page. And all the examples I need to throw on the page that&amp;rsquo;s supposed to convince you to pay me. Which is just a little bit awkward.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>